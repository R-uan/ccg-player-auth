// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlayerAuthServer.Database;

#nullable disable

namespace PlayerAuthServer.Database.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(PlayerDbContext))]
    partial class PlayerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayerAuthServer.Database.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Id")
                        .HasDefaultValueSql("gen_random_Id()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("PlayerAuthServer.Database.Entities.PlayerDeck", b =>
                {
                    b.Property<Guid>("PlayerGuid")
                        .HasColumnType("Id");

                    b.Property<Guid>("DeckGuid")
                        .HasColumnType("Id");

                    b.Property<Guid?>("PlayerId")
                        .HasColumnType("Id");

                    b.HasKey("PlayerGuid", "DeckGuid");

                    b.HasIndex("PlayerId");

                    b.ToTable("player_decks", (string)null);
                });

            modelBuilder.Entity("PlayerAuthServer.Database.Entities.PlayerDeck", b =>
                {
                    b.HasOne("PlayerAuthServer.Database.Entities.Player", null)
                        .WithMany("Decks")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("PlayerAuthServer.Database.Entities.Player", b =>
                {
                    b.Navigation("Decks");
                });
#pragma warning restore 612, 618
        }
    }
}
